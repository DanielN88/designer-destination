# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'

# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference

# version: 2.1
# orbs:
#     cypress: cypress-io/cypress@1
#   workflows:
#     build:
#       jobs:
#       - cypress/run

version: 2.1
orbs:
  cypress: cypress-io/cypress@1
workflows:
  build:
    jobs:
      - cypress/run:
          start: npm start
          wait-on: 'http://localhost:3000'
          

# version: 2.1
# jobs:
#   # running commands on a basic image
#   Hello-World:
#     docker:
#       - image: alpine:3.15
#     steps:
#       - run:
#           name: Saying Hello
#           command: |
#             echo 'Hello World!'
#             echo 'This is the delivery pipeline'
#   # fetching code from the repo
#   Fetch-Code:
#     docker:
#       - image: cimg/base:2021.04
#     steps:
#       - checkout
#       - run:
#           name: Getting the Code
#           command: |
#             ls -al
#             echo '^^^Your repo files^^^'
#   # running a node container
#   Using-Node:
#     docker:
#       - image: cimg/node:17.2
#     steps:
#       - run:
#           name: Running the Node Container
#           command: |
#             node -v
#   Now-Complete:
#     docker:
#       - image: alpine:3.15
#     steps:
#       - run:
#           name: Approval Complete
#           command: |
#             echo 'The work is now complete.'

# workflows:
#   Example-Workflow:
#     jobs:
#       - Hello-World
#       - Fetch-Code:
#           requires:
#             - Hello-World
#       - Using-Node:
#           requires:
#             - Fetch-Code
#       - Hold-for-Approval:
#           type: approval
#           requires:
#             - Using-Node
#             - Fetch-Code
#       - Now-Complete:
#           requires:
#             - Hold-for-Approval

# version: 2.1

# commands:
#   install-commit-installs:
#   steps:
#   - run npm install @cypress/commit-message-install@2.5.2

#   install-and-test:
#     description: Install necessary Cypress version and verifies it.
#     steps:
#     - checkout 
#     - run: npm install
#     - install-commit-install
#     - run: $(npm bin)/commit-message-install -else "npm install cypress"
#     - run: $(npm bin)/run-if $(npm bin)/cypress version
#     - run: DEBUG=cypress:cli $(npm bin)/run- if $(npm bin)/cypress verify

#     send-status:
#       description: Send failed status right away
#       steps:
#       - run:
#           when: on_fail
#           name: Set status check
#           command: $(npm bin)/set-status --state failure --description "$CIRCLE_STAGE on CircleCI"

#       defaults: $defaults
#       parallelism: 1
#       working_directory: ~/app
#       environment:
#         - npm_config_engine_strict: 1

#       jobs: 
#         "node-8":
#         <<: *defaults
#         docker: 
#         - image: cypress/base:8
#         user: node
#         steps:
#         - install-and-test
#         - send-status

  

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
# orbs:
#   node: circleci/node@4.7
#   cypress: cypress-io/cypress@2.0.0

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
# workflows:
#   sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    # jobs:
    #   - node/test:
          # This is the node version to use for the `cimg/node` tag
          # Relevant tags can be found on the CircleCI Developer Hub
          # https://circleci.com/developer/images/image/cimg/node
          # version: '16.10'
          # If you are using yarn, change the line below from "npm" to "yarn"
          # pkg-manager: npm
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
# jobs:
#   say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    # docker:
    #   - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    # steps:
    #   - checkout
    #   - run:
    #       name: "Say hello"
    #       command: "echo Hello, World!"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
# workflows:
#   say-hello-workflow:
#     jobs:
#       - say-hello
